{"ast":null,"code":"var _jsxFileName = \"/home/amit/test-node/client/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { get, post, upvote } from './api-connect';\nimport dateformat from 'dateformat';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }; // this.handleAddNewPost = this.handleAddNewPost.bind(this)\n    // this.addNewPost = this.addNewPost.bind(this)\n    //this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    get().then(res => {\n      this.setState({\n        data: res\n      });\n    });\n  }\n\n  handleAddNewPost() {\n    this.setState({\n      showInput: true\n    });\n  }\n\n  addNewPost() {\n    post({\n      text: this.state.text\n    }).then(() => {\n      return get().then(res => {\n        this.setState({\n          data: res,\n          showInput: false\n        });\n      });\n    });\n  }\n\n  upvotePost(id) {\n    upvote(id).then(() => {\n      return get().then(res => {\n        this.setState({\n          data: res\n        });\n      });\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"POSTS:\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.data.map((d, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, d.text, React.createElement(\"span\", {\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, dateformat(d.createdOn, 'mmm dd, yyyy, hh:MM tt'))), React.createElement(Button, {\n        bsStyle: \"link\",\n        onClick: this.upvotePost.bind(this, d.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\".concat(d.upvotes, \" Upvotes\")));\n    })), !this.state.showInput ? React.createElement(Button, {\n      bsStyle: \"link\",\n      onClick: this.handleAddNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Add\") : [React.createElement(\"input\", {\n      key: 0,\n      onChange: this.handleChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Button, {\n      bsStyle: \"link\",\n      key: 1,\n      onClick: this.addNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Add Post\")]);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amit/test-node/client/src/App.js"],"names":["React","Component","Button","get","post","upvote","dateformat","App","constructor","props","state","data","componentDidMount","then","res","setState","handleAddNewPost","showInput","addNewPost","text","upvotePost","id","handleChange","e","target","value","render","map","d","i","padding","createdOn","bind","upvotes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap'\nimport { get, post, upvote } from './api-connect'\nimport dateformat from 'dateformat'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: []\n    }\n\n    // this.handleAddNewPost = this.handleAddNewPost.bind(this)\n    // this.addNewPost = this.addNewPost.bind(this)\n    //this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    get()\n      .then(res => {\n        this.setState({ data: res })\n      })\n  }\n\n  handleAddNewPost() {\n    this.setState({ showInput: true })\n  }\n\n  addNewPost() {\n    post({ text: this.state.text })\n      .then(() => {\n        return get()\n          .then(res => {\n            this.setState({ data: res, showInput: false })\n          })\n      })\n  }\n\n  upvotePost(id) {\n    upvote(id)\n      .then(() => {\n        return get()\n          .then(res => {\n            this.setState({ data: res })\n          })\n      })\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>POSTS:</div>\n        <div>\n          {this.state.data.map((d, i) => {\n            return (\n              <div key={i}>{d.text}\n                <span style={{ padding: '10px' }}>\n                  <span>{dateformat(d.createdOn, 'mmm dd, yyyy, hh:MM tt')}</span>\n                </span>\n                <Button bsStyle='link' onClick={this.upvotePost.bind(this, d.id)}>\n                  {`${d.upvotes} Upvotes`}\n                </Button>\n              </div>\n            )\n          })}\n        </div>\n        {!this.state.showInput ?\n          (<Button bsStyle='link' onClick={this.handleAddNewPost}>Add</Button>) :\n          [<input key={0} onChange={this.handleChange} type='text'></input>,\n          <Button bsStyle='link' key={1} onClick={this.addNewPost}>Add Post</Button>]\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}