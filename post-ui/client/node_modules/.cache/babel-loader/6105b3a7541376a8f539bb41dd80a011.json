{"ast":null,"code":"import { createStore } from 'redux';\nimport { REQUEST, RECEIVE } from './actions';\nconst initialState = {\n  success: true,\n  isFetching: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST:\n      return {\n        success: false,\n        isFetching: true,\n        method: action.method\n      };\n\n    case RECEIVE:\n      return {\n        success: true,\n        isFetching: false,\n        content: action.content,\n        method: action.method\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(() => {\n  return {\n    response: reducer\n  };\n});\nexport default store;","map":{"version":3,"sources":["/home/amit/feed-node/client/src/store.js"],"names":["createStore","REQUEST","RECEIVE","initialState","success","isFetching","reducer","state","action","type","method","content","store","response"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,OAAL;AACI,aAAO;AACHG,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,UAAU,EAAE,IAFT;AAGHK,QAAAA,MAAM,EAAEF,MAAM,CAACE;AAHZ,OAAP;;AAKJ,SAAKR,OAAL;AACI,aAAO;AACHE,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,UAAU,EAAE,KAFT;AAGHM,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAHb;AAIHD,QAAAA,MAAM,EAAEF,MAAM,CAACE;AAJZ,OAAP;;AAMJ;AACI,aAAOH,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,MAAMK,KAAK,GAAGZ,WAAW,CAAC,MAAM;AAAE,SAAO;AAAEa,IAAAA,QAAQ,EAAEP;AAAZ,GAAP;AAA8B,CAAvC,CAAzB;AAEA,eAAeM,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { REQUEST, RECEIVE } from './actions'\n\nconst initialState = {\n    success: true,\n    isFetching: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST:\n            return {\n                success: false,\n                isFetching: true,\n                method: action.method\n            };\n        case RECEIVE:\n            return {\n                success: true,\n                isFetching: false,\n                content: action.content,\n                method: action.method\n            };\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(() => { return { response: reducer } });\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}