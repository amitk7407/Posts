{"ast":null,"code":"import { BEGIN, SUCCESS, ERROR } from './actions';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nconst initialState = {\n  result: {\n    success: true,\n    isFetching: false\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BEGIN:\n      return {\n        result: {\n          success: false,\n          isFetching: true,\n          error: false,\n          method: action.method\n        }\n      };\n\n    case SUCCESS:\n      return {\n        result: {\n          success: true,\n          isFetching: false,\n          error: false,\n          content: action.content,\n          method: action.method\n        }\n      };\n\n    case ERROR:\n      return {\n        result: {\n          success: true,\n          isFetching: false,\n          error: true,\n          content: null,\n          method: action.method\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"sources":["/home/amit/feed-node/client/src/store.js"],"names":["BEGIN","SUCCESS","ERROR","thunk","createStore","applyMiddleware","initialState","result","success","isFetching","reducer","state","action","type","error","method","content","store"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,QAAsC,WAAtC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,IADL;AAEJC,IAAAA,UAAU,EAAE;AAFR;AADS,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,KAAL;AACI,aAAO;AACHO,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE,KADL;AAEJC,UAAAA,UAAU,EAAE,IAFR;AAGJK,UAAAA,KAAK,EAAE,KAHH;AAIJC,UAAAA,MAAM,EAAEH,MAAM,CAACG;AAJX;AADL,OAAP;;AAQJ,SAAKd,OAAL;AACI,aAAO;AACHM,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE,IADL;AAEJC,UAAAA,UAAU,EAAE,KAFR;AAGJK,UAAAA,KAAK,EAAE,KAHH;AAIJE,UAAAA,OAAO,EAAEJ,MAAM,CAACI,OAJZ;AAKJD,UAAAA,MAAM,EAAEH,MAAM,CAACG;AALX;AADL,OAAP;;AASJ,SAAKb,KAAL;AACI,aAAO;AACHK,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE,IADL;AAEJC,UAAAA,UAAU,EAAE,KAFR;AAGJK,UAAAA,KAAK,EAAE,IAHH;AAIJE,UAAAA,OAAO,EAAE,IAJL;AAKJD,UAAAA,MAAM,EAAEH,MAAM,CAACG;AALX;AADL,OAAP;;AASJ;AACI,aAAOJ,KAAP;AA/BR;AAiCH,CAlCD;;AAoCA,MAAMM,KAAK,GAAGb,WAAW,CACrBM,OADqB,EAErBL,eAAe,CAACF,KAAD,CAFM,CAAzB;AAKA,eAAec,KAAf","sourcesContent":["import { BEGIN, SUCCESS, ERROR } from './actions'\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\n\nconst initialState = {\n    result: {\n        success: true,\n        isFetching: false\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case BEGIN:\n            return {\n                result: {\n                    success: false,\n                    isFetching: true,\n                    error: false,\n                    method: action.method\n                }\n            };\n        case SUCCESS:\n            return {\n                result: {\n                    success: true,\n                    isFetching: false,\n                    error: false,\n                    content: action.content,\n                    method: action.method\n                }\n            };\n        case ERROR:\n            return {\n                result: {\n                    success: true,\n                    isFetching: false,\n                    error: true,\n                    content: null,\n                    method: action.method\n                }\n            };\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n);\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}